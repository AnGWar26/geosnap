.. _api_ref:

.. currentmodule:: geosnap

API reference
=============

.. _data_api:

Data Module
--------------

Storing data
'''''''''''''''

geosnap's data module provides functions for collecting and storing a variety of datasets
including U.S. Census data from 1990-2010, LEHD data from any vintage, and external longitudinal databases.

.. currentmodule:: geosnap.data

.. autosummary::
   :toctree: generated/

    data.store_census
    data.store_blocks_2000
    data.store_blocks_2010
    data.store_ltdb
    data.store_ncdb
    data.get_lehd

Accessing Stored Datasets
'''''''''''''''''''''''''''''''

It also provides a storage container (called a "data_store") that provides access to datasets that have been imported with the functions above

.. currentmodule:: geosnap.data

.. autosummary::
   :toctree: generated/
   
    data.data_store
    data_store.blocks_2000
    data_store.blocks_2010
    data_store.codebook
    data_store.counties
    data_store.ltdb
    data_store.msa_definitions
    data_store.msas
    data_store.ncdb
    data_store.states
    data_store.tracts_1990
    data_store.tracts_2000
    data_store.tracts_2010


The Community Class
-----------------------

The `Community` is the central construct in geonap used to hold spatiotemporal neighborhood data.
The most common way to interact with geosnap is by instantiating a Community using a constructor method,
then using analytical methods upon the community

.. currentmodule:: geosnap.data

.. autosummary::
   :toctree: generated/
   
   geosnap.data.Community
   
Community Constructors
''''''''''''''''''''''''''''
.. currentmodule:: geosnap.data

.. autosummary::
   :toctree: generated/
  
   Community.from_census
   Community.from_geodataframes
   Community.from_lodes
   Community.from_ltdb
   Community.from_ncdb
  
.. _analyze_api:


Community Analytics
'''''''''''''''''''''''''
.. currentmodule:: geosnap.data

.. autosummary::
   :toctree: generated/
   
   Community.cluster
   Community.cluster_spatial
   Community.harmonize
   Community.sequence
   Community.transition

   
Analyze Module
----------------

Neighborhood Clustering Methods
``````````````````````````````````
Model neighborhood differentiation using multivariate clustering algorithms

.. autosummary::
   :toctree: generated/
   
    geosnap.analyze.cluster
    geosnap.analyze.cluster_spatial

Clustering algorithms
'''''''''''''''''''''''
The following algorithms may be passed to `geosnap.analyze.cluster` or `geosnap.analyze.cluster_spatial` but they should not be called directly

Classic (aspatial) Clustering
""""""""""""""""""""""""""""""

.. currentmodule:: geosnap.analyze.analytics

.. autosummary::
   :toctree: generated/

    affinity_propagation
    gaussian_mixture
    hdbscan
    kmeans
    spectral
    ward

Spatial Clustering
""""""""""""""""""

.. currentmodule:: geosnap.analyze.analytics

.. autosummary::
   :toctree: generated/

    azp
    max_p
    skater
    spenc
    ward_spatial    

    
Neighborhod Dynamics Methods
````````````````````````````````
Model neighborhood change using optimal-matching algorithms or spatial discrete markov chains

.. currentmodule:: geosnap

.. autosummary::
   :toctree: generated/
   
   geosnap.analyze.linc
   geosnap.analyze.sequence
   geosnap.analyze.transition

.. _harmonize_api:

Harmonize Module
----------------
.. currentmodule:: geosnap.data.Community

.. autosummary::
   :toctree: generated/

   Community.harmonize

.. _visualize_api:

Visualize Module
----------------

.. currentmodule:: geosnap.visualize

.. autosummary::
   :toctree: generated/

   visualize.indexplot_seq
   visualize.explore
